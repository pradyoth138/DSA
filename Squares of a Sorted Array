Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

Example 1:
Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].

Example 2:
Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]

https://leetcode.com/problems/squares-of-a-sorted-array/description/


import java.util.Arrays;

public class Squared_numbers {
	
	public static int[] sortedarrays(int [] nums) {
		int n=nums.length;
		int[] result=new int[n];
		
		for(int i=0;i<n;i++) {
			result[i]=nums[i]*nums[i];
		}
		Arrays.sort(result);
		return result;
	}
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] nums= {-4,-1,0,3,10};
		int[] result = sortedarrays(nums);
		for (int num : result) {
		    System.out.print(num + " ");
		}
		System.out.println();
		
		
		

	}

}
