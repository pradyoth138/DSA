Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.

Example 1:
Input: nums = [2,2,1]
Output: 1

Example 2:
Input: nums = [4,1,2,1,2]
Output: 4

Example 3:
Input: nums = [1]
Output: 1

https://leetcode.com/problems/single-number/description/

public class Main {
    public static void main(String[] args) {
        int[] nums = {2, 3, 5, 3, 2}; // Example input, single number is 5

        Solution sol = new Solution();
        int single = sol.singleNumber(nums);

        System.out.println("The single number is: " + single);
    }
}

class Solution {
    public int singleNumber(int[] nums) {
        int result = 0;
        for (int n : nums) {
            result = result ^ n; // XOR cancels out pairs
        }
        return result;
    }
}
